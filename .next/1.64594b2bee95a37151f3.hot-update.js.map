{"version":3,"file":"1.64594b2bee95a37151f3.hot-update.js","sources":["webpack:///lib/with-redux-store.js","webpack:///store.js"],"sourcesContent":["import App, {Container} from 'next/app'\nimport {Provider} from 'react-redux'\nimport {initializeStore} from '../store'\n\nconst isServer = typeof window === 'undefined'\nconst __NEXT_REDUX_STORE__ = '__NEXT_REDUX_STORE__'\n\nfunction getOrCreateStore(initialState) {\n  // Always make a new store if server, otherwise state is shared between requests\n  if (isServer) {\n    return initializeStore(initialState)\n  }\n\n  // Store in global variable if client\n  if (!window[__NEXT_REDUX_STORE__]) {\n    window[__NEXT_REDUX_STORE__] = initializeStore(initialState)\n  }\n  return window[__NEXT_REDUX_STORE__]\n}\n\nexport default (App) => {\n  return class Redux extends React.Component {\n    static async getInitialProps (appContext) {\n      const reduxStore = getOrCreateStore()\n\n      // Provide the store to getInitialProps of pages\n      appContext.ctx.reduxStore = reduxStore\n\n      let appProps = {}\n      if (App.getInitialProps) {\n        appProps = await App.getInitialProps(appContext)\n      }\n\n      return {\n        ...appProps,\n        initialReduxState: reduxStore.getState()\n      }\n    }\n\n    constructor(props) {\n      super(props)\n      this.reduxStore = getOrCreateStore(props.initialReduxState)\n    }\n\n    render() {\n      return <App {...this.props} reduxStore={this.reduxStore} />\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// lib/with-redux-store.js","import { createStore, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport thunkMiddleware from 'redux-thunk'\n\nconst initialState = {\n  data: {},\n}\n\nexport const actionTypes = {\n  SET_DATA: 'SET_DATA',\n}\n\n// REDUCERS\nexport const reducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case actionTypes.SET_DATA:\n      return {\n        ...state,\n        data: payload,\n      }\n    default:\n      return state\n  }\n}\n\n// ACTIONS\nexport const setData = (payload) => {\n  return {\n    type: actionTypes.SET_DATA,\n    payload,\n  }\n}\n\nexport function initializeStore (initialState = initialState) {\n  return createStore(reducer, initialState, composeWithDevTools(applyMiddleware(thunkMiddleware)))\n}\n\n\n\n// WEBPACK FOOTER //\n// store.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AAEA;AACA;AARA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AASA;AACA;AAVA;AAAA;AAcA;AAdA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AAiBA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAGA;AACA;AAtBA;AAAA;AAAA;AAwBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAzBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AA2BA;AACA;AA7BA;;;;;;;;;;;;AAhBA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AAEA;AACA;AADA;AAIA;AACA;AACA;AAFA;AAKA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAPA;AASA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AAAA;AACA;AACA;;;;;;;;;;;;AA/BA;AAIA;AAKA;AAaA;AAOA;;;;;;;;;A","sourceRoot":""}